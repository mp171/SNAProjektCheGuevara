---
title: "Che Guava"
author: "Franziska Weber, Lisa Conzelmann, Maria Petalidou"
date: "30 März 2023"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Das Projekt: Che Guevara und die kubanische Revolution

Wir untersuchen das Gesamtnetzwerk der kubanischen Revolution. Unsere Forschungsfrage lautet:
"Che Guevara war das Gesicht der kubanischen Revolution. 
Welchen Platz nimmt er im Gesamtnetzwerk der Bewegung des 26. Juli ein und wie sind andere Länder und Gesellschaftssektoren involviert?"

## Edgelist

Beziehungen sind nicht gewichtet und nicht gerichtet.
						
Mögliche Beziehungstypen (über "relation" festgelegt):						
						
1 = Unterstützer
2 = Anführer				
3 = Liebesbeziehung			
4 = Gegner				
5 = Bekanntschaft						
6 = Aufenthalt
7 = Familie

Der Zeitpunkt der Beziehung wird in der Spalte "Year" festgelegt. Es wird festgehalten, in welchem Jahr eine Beziehung eingegangen wurde. Bei Änderung der Beziehung wird eine neue Kante definiert mit der neuen Beziehungsart und Beziehungszeitpunkt.
Sollten Beziehungen vor Beginn unserer Datenerhebung eingegangen worden sein, wird dies nicht definiert. Sollten Beziehungen sich über den gesamten Erhegungszeitraum nicht verändern, wird dies ebenfalls nicht definiert und mit 0 gekennzeichnet.
						
## Nodelist

Um fehlerhafte Anzeigen zu vermeiden, werden keine Sonderzeichen verwendet. Namen müssen somit ohne Akzente geschrieben werden. 
												
### Types					
						
Person
Organisation 
Land

Es gibt drei verschiedene Arten von Knoten, die mit "types" unterschieden werden: Personen, Organisationen oder Länder.
						
### Sectors	

Militär						
Politik						
Widerstand 			
Medien
Medizin
Wissenschaft
Judikative
Bildung
Handwerk
Architektur
Musik
Wirtschaft
Kirche
Landwirtschaft

Knoten werden in verschiedene Teile der Gesellschaft geteilt, die in der Spalte "sectors" festgelegt werden. Bei Personen und Organisationen werden 14 verschiedene Sektoren unterschieden, die oben aufgelistet sind. Bei Personen werden Arbeitsverhältnisse oder Ausbildung vor dem Anschluss zum Widerstand notiert. Wenn das nicht bekannt ist, wird die Person dem Sektor Widerstand zugeordnet.   
Bei Ländern wird der Sektor als Land notiert.

## Projektmanagement

Wir arbeiten mit der Vorlage für einen Projekt-Backlog von Lars Rinsdorf. Der Link zum Projektlog ist hier zu finden: https://docs.google.com/spreadsheets/d/1aVolX0rD4p-sPcQ3oNIEUTo5ZA23BJFK/edit?usp=sharing&ouid=103775396014785397767&rtpof=true&sd=true			

## Netzwerk einlesen

```{r Netzwerk einlesen}

### Programmbibliothek laden
library(igraph)

### Einlesen der Edge- und Nodelist
edges <- read.csv("https://raw.githubusercontent.com/mp171/SNAProjektCheGuevara/main/EdgelistKuba.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("https://raw.githubusercontent.com/mp171/SNAProjektCheGuevara/main/NodelistKuba.csv", header=T, as.is=T, sep = ",")

### Matrix erstellen
edgematrix <-as.matrix(edges)

### Zusammenführen von Edge- und Nodelist
kubarevolution <- graph_from_data_frame(d=edgematrix, vertices=nodes, directed=T)

```
#Gesamtnetzwerk

###Visualisierungen und Ausgabe

```{r Einfache Visualisierung des Netzwerks, fig.height=5, fig.width=9}

### Farben festlegen

V(kubarevolution)[V(kubarevolution)$sector == "Militaer"]$color <- "firebrick3"
V(kubarevolution)[V(kubarevolution)$sector == "Politik"]$color <- "deepskyblue"
V(kubarevolution)[V(kubarevolution)$sector == "Widerstand"]$color <- "indianred1"
V(kubarevolution)[V(kubarevolution)$sector == "Medien"]$color <- "gold"
V(kubarevolution)[V(kubarevolution)$sector == "Medizin"]$color <- "azure"
V(kubarevolution)[V(kubarevolution)$sector == "Wissenschaft"]$color <- "chartreuse3"
V(kubarevolution)[V(kubarevolution)$sector == "Judikative"]$color <- "darkgoldenrod1"
V(kubarevolution)[V(kubarevolution)$sector == "Bildung"]$color <- "lightpink1"
V(kubarevolution)[V(kubarevolution)$sector == "Handwerk"]$color <- "lightsteelblue4"
V(kubarevolution)[V(kubarevolution)$sector == "Architektur"]$color <- "navajowhite"
V(kubarevolution)[V(kubarevolution)$sector == "Musik"]$color <- "deeppink"
V(kubarevolution)[V(kubarevolution)$sector == "Kirche"]$color <- "darkolivegreen"
V(kubarevolution)[V(kubarevolution)$sector == "Wirtschaft"]$color <- "mediumorchid3"
V(kubarevolution)[V(kubarevolution)$sector == "Land"]$color <- "orange"
V(kubarevolution)[V(kubarevolution)$sector == "Landwirtschaft"]$color <- "green"

E(kubarevolution)[E(kubarevolution)$relation == 1]$color <-"darkorange"
E(kubarevolution)[E(kubarevolution)$relation == 2]$color <-"red"
E(kubarevolution)[E(kubarevolution)$relation == 3]$color <-"blue"
E(kubarevolution)[E(kubarevolution)$relation == 4]$color <-"brown"
E(kubarevolution)[E(kubarevolution)$relation == 5]$color <-"chocolate"
E(kubarevolution)[E(kubarevolution)$relation == 6]$color <-"darkorchid"
E(kubarevolution)[E(kubarevolution)$relation == 7]$color <-"darkslategray"

plot(kubarevolution,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Kubanische Revolution Gesamtnetzwerk")
     
```
###Maße, Dichte, Betweensess Gesamtnetzwerk

```{r Beschreibung des Netzwerks}
# Parameter zu Beschreibung des Netzwerks

## ist das Netzwerk bereits vereinfacht?
is.simple(kubarevolution)

## besteht das Netzwerk aus Komponenten?
## wenn ja, wie vielen?
is.connected(kubarevolution)
components(kubarevolution)

## Dichte des Netzwerks
edge_density(kubarevolution, loops=FALSE)

## Umfang des Netzwerks
diameter(kubarevolution)

## Pfaddistanzen (Distance)
farthest_vertices(kubarevolution)
```


```{r Betweness}
## Betweenness-Zentralität(Betweness)
betw <- betweenness(kubarevolution)
# Berechnung der Betweenness-Zentralität
betw <- betweenness(kubarevolution)

# Sortieren nach der Höhe der Betweenness-Zentralität
sorted_betw <- sort(betw, decreasing = TRUE)

# Berechnet die Betwenness-Zentralität für alle Knoten im Netzwerk
bet <- betweenness(kubarevolution)

# Erstellet eine Tabelle mit den Knotennamen und ihren Betwenness-Werten
bet_df <- data.frame(Node = names(bet), Betweenness = bet)

# Sortiert die Tabelle nach Betwenness absteigend
bet_df <- bet_df[order(-bet_df$Betweenness),]

# Gibt die Tabelle aus
print(bet_df)
```

###Sektoren Visualisierung

```{r Gesamtnetzwerk Sektoren}

# Liste der Sektoren im Netzwerk
sector_list <- unique(nodes$sector)

sector_count <- table(nodes$sector)

print(sector_count)

```

#Teilnetzwerke

###Demographische Daten

```{r Teilnetzwerk Familie}

Familie <- subgraph.edges(kubarevolution, E(kubarevolution)[relation==7])

plot(Familie,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk Familie")
     
```

```{r Teilnetzwerk Liebe}

Love <- subgraph.edges(kubarevolution, E(kubarevolution)[relation==3])

plot(Love,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk Liebesbeziehungen")
     
```
###Entwicklung Jahre

```{r Teilnetzwerk 1952}

Zweifunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1952"])

plot(Zweifunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1952")
     
```

```{r Teilnetzwerk 1953}

Dreifunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1953"])

plot(Dreifunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1953")
     
```

```{r Teilnetzwerk 1954}

Vierfunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1954"])

plot(Vierfunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1954")
     
```

```{r Teilnetzwerk 1955}

Funffunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1955"])

plot(Funffunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1955")
     
```

```{r Teilnetzwerk 1956}

Sechsfunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1956"])

plot(Sechsfunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1956")
     
```

```{r Teilnetzwerk 1957}

Siebenfunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1957"])

plot(Siebenfunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1957")
     
```

```{r Teilnetzwerk 1958}

Achtfunf <- subgraph.edges(kubarevolution, E(kubarevolution)[year=="1958"]

plot(Achtfunf,
     asp=0,
     layout=layout_with_kk,
     rescale=TRUE,
     vertex.frame.color="black",
     edge.arrow.size=.5,
     main="Teilnetzwerk 1958")
     
```
#Ego-Netzwerke Länder

```{r Ego-Netzwerk Bolivien}

network_bov <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Bolivien", mode="all")

network_bov

network_bov_1 <- network_bov[[1]]

plot(network_bov_1, 
     main="Ego-Netzwerk Bolivien, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war in Bolivien?")
     
```

```{r Ego-Netzwerk Chile}

network_chi <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Chile", mode="all")

network_chi

network_chi_1 <- network_chi[[1]]

plot(network_chi_1, 
     main="Ego-Netzwerk Chile, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war in Chile?")
     
```

```{r Ego-Netzwerk Guatemala}

network_gua <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Guatemala", mode="all")

network_gua

network_gua_1 <- network_gua[[1]]

plot(network_gua_1, 
     main="Ego-Netzwerk Guatemala, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war in Guatemala?")
     
```

```{r Ego-Netzwerk Mexiko}

network_mex <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Mexiko", mode="all")

network_mex

network_mex_1 <- network_mex[[1]]

plot(network_mex_1, 
     main="Ego-Netzwerk Mexiko, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war alles in Mexiko")
```

```{r Ego-Netzwerk Kuba}

network_kub <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Kuba", mode="all")

network_kub

network_kub_1 <- network_kub[[1]]

plot(network_kub_1, 
     main="Ego-Netzwerk Kuba, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war alles in Kuba")
```

#Alle Netzwerke zur Bewegung des 26.Juli
###Erstellung des Ego-Netzwerks

```{r Ego-Netzwerk Bewegung des 26. Juli}
#Erstellung des Ego-Netzwerks
network_b26j <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Bewegung des 26. Juli", mode="all")

network_b26j

network_b26j_1 <- network_b26j[[1]]

#Ausgeben im Plot
plot(network_b26j_1, 
     main="Ego-Netzwerk Bewegung des 26. Juli, erster Grad",
     edge.arrow.size=.3,
     sub="Wer war alles an der Bewegung des 26. Juli beteiligt?")

```

###Involvierte Sektoren der Bewegung des 26.Juli

```{r Ego-Netzwerk Bewegung des 26. Juli node names}
#Zur Überprüfung ob es sich um die korrekte Anzahl an involvierten nodes handelt, sind im folgenden Chunk die Nodes namentlich ausgelistet und die Gesamtanzahl vom 74 nodes wurde ausgerechet.

#Namen der Knoten im Ego-Netzwerk
node_names <- names(V(network_b26j_1))
cat("Folgende Knoten sind im Ego-Netzwerk Bewegung des 26. Juli, erster Grad, enthalten:\n")
cat(node_names, "\n")
cat("Anzahl der Knoten im Ego-Netzwerk: ", length(node_names), "\n")

```

```{r Ego-Netzwerk Bewegung des 26. Juli Sektoren}
#Dieser Chunk zeigt die Aufteilung der Sektoren im Ego-NEtzwerk der Bewegung des 26.Juli

#Ego-Netzwerk erstellen
network_b26j <- make_ego_graph(kubarevolution, order = 1, nodes = V(kubarevolution)$name=="Bewegung des 26. Juli", mode="all")
network_b26j_1 <- network_b26j[[1]]

#Sektoren im Ego-Netzwerk zählen
sector_counts_b26j <- table(V(network_b26j_1)$sector)

print(sector_counts_b26j)

```
#Daten für Flourish vorbereiten

###Um die Datensätze in Flourish einzulesen müssen diese erst einmal aufbereitet werden

```{r Gesamtnetzwerk speichern}
### Zusammenführen von Edge- und Nodelist
write.csv(edgematrix, file = "kubarevolution.csv", row.names = FALSE)

write.csv(edges, file = "nodes.csv", row.names = FALSE)

write.csv(nodes, file = "edges.csv", row.names = FALSE)
```

```{r Tabelle Betweeness speichern}
write.csv(bet_df, file = "bet_tabelle.csv", row.names = FALSE)
```

```{r Count Secors B26J speichern}
write.csv(sector_counts_b26j, file = "sector_counts_b26j.csv", row.names = FALSE)
```

```{r Count Secors Gesammtnetzwerk speichern}
write.csv(sector_count, file = "sector_counts_gesamtnetzwerk.csv", row.names = FALSE)
```


```{r Ego-Netzwerk B26J Flourish speichern}
# igraph Objekt "network_b26j_1" in einen Dataframe umwandeln um diese dann als CSV-Datei zu speichern

# Netzwerk in Datenrahmen umwandeln
edgelist <- as_data_frame(as_edgelist(network_b26j_1))

vertices <- data.frame(id = V(network_b26j_1)$name)

nodes_df <- data.frame(id = V(network_b26j_1)$name)
write.csv(nodes_df, "nodes_b26j_1.csv", row.names = FALSE)

#Speichern
edges_df <- get.data.frame(network_b26j_1, what = "edges")
write.csv(edges_df, "edges_b26j_1.csv", row.names = FALSE)

```

```{r Ego-Netzwerk Che Guevara Flourish speichern}
# igraph Objekt "ego_net_che_1" in einen Dataframe umwandeln um diese dann als CSV-Datei zu speichern


# Netzwerk in Datenrahmen umwandeln
edgelist_che<- as_data_frame(as_edgelist(ego_net_che_1))

# Knoten in Datenrahmen umwandeln
vertices_che<- data.frame(id=V(ego_net_che_1)$name)

# Nodelist speichern
write.csv(vertices_che, "ego_net_che_1_nodes.csv", row.names = FALSE)

#Speichern
edges_che <- get.data.frame(ego_net_che_1, what = "edges")
write.csv(edges_che, "ego_net_che_1_edges.csv", row.names = FALSE)
```

```{r Ego-Netzwerk Fidel Castro speichern}
# igraph Objekt "edgelist_fica_1" in einen Dataframe umwandeln um diese dann als CSV-Datei zu speichern
# Netzwerk in Datenrahmen umwandeln

# Netzwerk in Datenrahmen umwandeln
edgelist_fica_1 <- as_data_frame(as_edgelist(ego_net_fica_1))

# Knoten in Datenrahmen umwandeln
vertices_fica_1 <- data.frame(id=V(ego_net_fica_1)$name)

# Nodelist speichern
write.csv(vertices_fica_1, "ego_net_fica_1_nodes.csv", row.names = FALSE)

# Kantenliste speichern
edges_fica_1 <- get.data.frame(ego_net_fica_1, what = "edges")
write.csv(edges_fica_1, "ego_net_fica_1_edges.csv", row.names = FALSE)
```


## Ideen für Visualisierungen

Eine Idee zur Visualisierung sind Balkendiagramme um die Verteilung der beteiligten gesellschaftlichen Sektoren (Militär, Medizin, Politik,etc.) darzustellen.
Darüberhinaus können wir uns Landkarten Lateinamerikas vorstellen, in welchen die Einflussgebiete Che Guevaras und der Bewegung des 26.Julis visualisiert werden.

## Ideen Abschlusspräsentation und Edit-Beitrag

Unsere Forschungsfrage beinhaltet explizit die Beteiligung an der Revolution von mehreren Ländern und Gesellschaftssektoren. Das hat uns im Laufe der Untersuchung gezeigt: Eine weitreichende, nachhaltige Veränderung einer Gesellschaft braucht eben diese Zusammenarbeit vieler verschiedener Menschen. Wir werden diese Entwicklung der Revolution zeigen, indem wir darstellen, wie sich zwischen den Akteuren im Laufe der Jahre ein weites Netzwerk aufspannt.
Abgesehen davon werden wir selbstverständlich auch über den Verlauf unserer Forschung mitsamt Datenerhebung und -bereinigung, Interpretation und Visualisierung berichten, sowie Learnings für kommende Projekte festhalten.
Im Edit-Beitrag werden wir die Figur Che Guevara kritisch hinterfragen. Er war und ist das Gesicht der Kubanischen Revolution. Doch liegt das wirklich an seiner zentralen Rolle innerhalb des Netzwerkes? Die Daten können hier mit Netzwerk- und Zentralitätsmaßen eine Antwort liefern. Spoiler: Grund für Ches Popularität ist eher nicht sein Handeln in der Bewegung des 26. Julis. Woher also kommt diese Heroisierung? In unserem Edit-Beitrag sollen verschiedene Erklärungsversuche thematisiert werden.

## Workload bis jetzt

AKtuell beträgt der Workload unserer Gruppe 60 Stunden.
Die Daten sind aus unserem Backlog entnommen und dort nachzulesen.

